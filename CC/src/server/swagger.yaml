openapi: 3.0.0
info:
  title: CultiviTea API
  description: API documentation for CultiviTea application
  version: 1.0.0

servers:
  - url: http://localhost:8085
    description: Local server

paths:
  /signup:
    post:
      summary: Sign up a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - username
                - email
                - password
      responses:
        '201':
          description: Verification email sent! User created successfully!
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    example: Username is required
                  email:
                    type: string
                    example: Email is required
                  password:
                    type: string
                    example: Password is required

  /signin:
    post:
      summary: Sign in a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: User logged in successfully
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: Email is required
                  password:
                    type: string
                    example: Password is required

  /logout:
    post:
      summary: Log out a user
      responses:
        '200':
          description: User logged out successfully

  /reset-password:
    post:
      summary: Reset user password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        '200':
          description: Password reset email sent successfully!

  /predict:
    post:
      summary: Predict using model
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '201':
          description: Model is predicted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Model is predicted successfully
                  data:
                    $ref: '#/components/schemas/predictions'

  /predict/histories:
    get:
      summary: Get prediction histories
      responses:
        '200':
          description: Get all prediction histories
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/predictions'

  /discussions:
    post:
      summary: Create a new discussion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
              required:
                - title
                - content
      responses:
        '201':
          description: Discussion created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Discussion created
                  data:
                    $ref: '#/components/schemas/discussions'

    get:
      summary: Get all discussions
      responses:
        '200':
          description: Get all discussions
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/discussions'

  /discussions/{discussionId}:
    get:
      summary: Get a discussion by ID
      parameters:
        - in: path
          name: discussionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get a discussion
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    $ref: '#/components/schemas/discussions'
    delete:
      summary: Delete a discussion by ID
      parameters:
        - in: path
          name: discussionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Discussion deleted successfully

  /discussions/edit/{discussionId}:
    put:
      summary: Update a discussion by ID
      parameters:
        - in: path
          name: discussionId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
              required:
                - title
                - content
      responses:
        '200':
          description: Discussion updated successfully

  /discussions/{discussionId}/comments:
    post:
      summary: Create a new comment for a discussion
      parameters:
        - in: path
          name: discussionId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
              required:
                - content
      responses:
        '201':
          description: Comment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Comment created
                  data:
                    $ref: '#/components/schemas/comments'
    get:
      summary: Get all comments for a discussion
      parameters:
        - in: path
          name: discussionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get all comments
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/comments'

  /discussions/{discussionId}/comments/{commentId}:
    delete:
      summary: Delete a comment by ID for a discussion
      parameters:
        - in: path
          name: discussionId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Comment deleted successfully

  /profile/{uid}:
    get:
      summary: Get a user profile by ID
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User profile fetched
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    $ref: '#/components/schemas/profiles'

    delete:
      summary: Delete a user profile by ID
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User profile deleted


  /profile/edit/{uid}:
     put:
      summary: Update a user profile by ID
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                phoneNumber:
                  type: string
                dateOfBirth:
                  type: string
                imageUrl:
                  type: string
      responses:
        '200':
          description: User profile updated


components:
  schemas:
    profiles:
      type: object
      properties:
        username:
          type: string
        uid:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        dateOfBirth:
          type: string
        imageUrl:
          type: string
      required:
        - username
        - uid
        - email

    discussions:
      type: object
      properties:
        discussionId:
          type: string
        creatorUid:
          type: string
        creator:
          type: string
        title:
          type: string
        content:
          type: string
        createdAt:
          type: string
      required:
        - discussionId
        - creatorUid
        - creator
        - title
        - content
        - createdAt

    comments:
      type: object
      properties:
        commentId:
          type: string
        creatorUid:
          type: string
        creator:
          type: string
        content:
          type: string
        createdAt:
          type: string
      required:
        - commentId
        - creatorUid
        - creator
        - content
        - createdAt

    predictions:
      type: object
      properties:
        teaPlantId:
          type: string
        result:
          type: string
        suggestion:
          type: string
        createdAt:
          type: string
      required:
        - teaPlantId
        - result
        - suggestion
        - createdAt
    
