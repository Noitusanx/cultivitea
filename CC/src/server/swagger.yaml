openapi: 3.0.0
info:
  version: "1.0.0"
  title: Cultivitea API
  description: The API for the Cultivitea project
servers:
  - description: Localhost server for Cultivitea
    url: http://localhost:8085
paths:
  /discussions:
    post:
      summary: Create a discussion
      operationId: createDiscussion
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
      responses:
        '201':
          description: Discussion created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discussion'
    get:
      summary: Get all discussions
      operationId: getAllDiscussions
      responses:
        '200':
          description: A list of discussions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Discussion'

  /discussions/{discussionId}:
    get:
      summary: Get a discussion by ID
      operationId: getDiscussion
      parameters:
        - in: path
          name: discussionId
          required: true
          schema:
            type: string
          description: The discussion ID
      responses:
        '200':
          description: A discussion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discussion'
        '404':
          description: Discussion not found
    
    delete:
      summary: Delete a discussion by ID
      operationId: deleteDiscussion
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: discussionId
          required: true
          schema:
            type: string
          description: The discussion ID
      responses:
        '200':
          description: Discussion deleted successfully
        '404':
          description: Discussion not found
        '403':
          description: Unauthorized to delete discussion
  

  /discussions/edit/{discussionId}:
    put:
      summary: Edit a discussion by ID
      operationId: editDiscussion
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: discussionId
          required: true
          schema:
            type: string
          description: The discussion ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
      responses:
        '200':
          description: Discussion edited successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discussion'
        '404':
          description: Discussion not found
        '403':
          description: Unauthorized to edit discussion

  /discussions/{discussionId}/comments:
    post:
      summary: Create a comment on a discussion
      operationId: createComment
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: discussionId
          required: true
          schema:
            type: string
          description: The discussion ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
      responses:
        '201':
          description: Comment created
    get:
      summary: Get comments of a discussion
      operationId: getComments
      parameters:
        - in: path
          name: discussionId
          required: true
          schema:
            type: string
          description: The discussion ID
      responses:
        '200':
          description: A list of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    commentId:
                      type: string
                    content:
                      type: string
                    createdAt:
                      type: string
                      format: date-time
                    creator:
                      type: string

  /discussions/{discussionId}/comments/{commentId}:
    delete:
      summary: Delete a comment from a discussion
      operationId: deleteComment
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: discussionId
          required: true
          schema:
            type: string
          description: The discussion ID
        - in: path
          name: commentId
          required: true
          schema:
            type: string
          description: The comment ID
      responses:
        '200':
          description: Comment deleted successfully
        '404':
          description: Comment not found
        '403':
          description: Unauthorized to delete comment

  /signup:
    post:
      summary: User sign up
      operationId: signUp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User signed up

  /signin:
    post:
      summary: User sign in
      operationId: signIn
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User signed in

  /logout:
    post:
      summary: User logout
      operationId: logOut
      responses:
        '200':
          description: User logged out

  /reset-password:
    post:
      summary: Reset password
      operationId: resetPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Password reset email sent

  /profile:
    get:
      summary: Get authenticated user's profile
      operationId: getProfile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized

    put:
      summary: Update authenticated user's profile
      operationId: updateProfile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
      responses:
        '200':
          description: Profile updated successfully
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

    delete:
      summary: Delete authenticated user's profile
      operationId: deleteProfile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Profile deleted successfully
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /profile/{userId}:
    get:
      summary: Get a user's profile by ID
      operationId: getProfileById
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        '200':
          description: User profile retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '500':
          description: Internal Server Error

    put:
      summary: Update a user's profile by ID
      operationId: updateProfileById
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: The user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
      responses:
        '200':
          description: Profile updated successfully
        '404':
          description: User not found
        '500':
          description: Internal Server Error

    delete:
      summary: Delete a user's profile by ID
      operationId: deleteProfileById
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        '200':
          description: Profile deleted successfully
        '404':
          description: User not found
        '500':
          description: Internal Server Error

components:
  schemas:
    Discussion:
      type: object
      properties:
        discussionId:
          type: string
        creatorUid:
          type: string
        creator:
          type: string
        title:
          type: string
        content:
          type: string
        createdAt:
          type: string
          format: date-time
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'

    User:
      type: object
      properties:
        userId:
          type: string
        username:
          type: string
        email:
          type: string
        createdAt:
          type: string
          format: date-time

    Comment:
      type: object
      properties:
        commentId:
          type: string
        creator:
          type: string
        content:
          type: string
        createdAt:
          type: string
          format: date-time

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
